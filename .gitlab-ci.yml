stages:
  - staging
  - production

variables:
  PROJECT_LOCATION_STAGING: ~/repositories/staging/cms-react/
  PROJECT_LOCATION_PRODUCTION: $PROJECT_LOCATION_PRODUCTION
  PROJECT_DEPLOY_PORT: $PROJECT_DEPLOY_PORT
  
deploy:staging:
  stage: staging
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync sshpass
    - mkdir -p ~/.ssh
    - echo "$SERVER_SECRET_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - sshpass -p '$SERVER_PASS' rsync -e ssh -avrc --delete . $USER_STAGING@$HOSTS_STAGING:$PROJECT_LOCATION_STAGING
    - >
      sshpass -p "$SERVER_PASS" ssh -t $USER_STAGING@$HOSTS_STAGING "
      cd $PROJECT_LOCATION_STAGING ;
      rm -rf .env.development ;
      cp configs/.env.staging ./.env ;
      docker build -t asefamarudin/react:latest . ;
      docker push asefamarudin/react:latest ;
      docker rmi -f asefamarudin/react:latest ;
      ssh $USER_STAGING@$HOSTS_FE_STAGING $SHELL << EOF
      cd /root/repositories
      docker pull asefamarudin/react:latest
      docker-compose up -d
      docker image prune -f
      exit
      EOF
      pwd 
      "
  only:
    - staging

deploy:production:
  stage: production
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync
    - mkdir -p ~/.ssh
    - echo "$SERVER_SECRET_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - rsync -e "ssh -p$PROJECT_DEPLOY_PORT" -avrc --delete . $DEPLOY_PRODUCTION_USER@$DEPLOY_PRODUCTION_HOST:$PROJECT_LOCATION_PRODUCTION
    - >
      ssh -t $DEPLOY_PRODUCTION_USER@$DEPLOY_PRODUCTION_HOST -p $PROJECT_DEPLOY_PORT "
      cd $PROJECT_LOCATION_PRODUCTION ;
      rm -rf .env.development ;
      cp configs/.env.production ./.env ;
      cd manifest ;
      docker-compose -f docker-compose.production.yml down ;
      docker-compose -f docker-compose.production.yml up --build -d
      "
  only:
    - production
