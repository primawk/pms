stages:
  - staging
  - production

variables:
  PROJECT_LOCATION_STAGING: ~/repositories/staging/cms-react/
  PROJECT_LOCATION_PRODUCTION: ~/repositories/production/cms-react/
  PROJECT_DEPLOY_PORT: $PROJECT_DEPLOY_PORT
  
deploy:staging:
  stage: staging
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync sshpass
    - mkdir -p ~/.ssh
    - echo "$SERVER_SECRET_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - rsync -e "ssh -p$PROJECT_DEPLOY_PORT" -avrc --delete . $USER_STAGING@$HOSTS_STAGING:$PROJECT_LOCATION_STAGING
    - >
      ssh -t $USER_STAGING@$HOSTS_STAGING "
      cd $PROJECT_LOCATION_STAGING ;
      rm -rf .env.development ;
      cp configs/.env.staging ./.env ;
      docker build -t cms-react:latest . ;
      docker save --output saved-image.tar cms-react:latest;
      docker rmi -f cms-react:latest 
      "
    - >
      ssh -t $USER_FE_STAGING@$HOSTS_FE_STAGING "
      cd /root/repositories ;
      scp $USER_STAGING@$HOSTS_STAGING:$PROJECT_LOCATION_STAGING/saved-image.tar ./ ;
      docker load --input saved-image.tar ;
      docker-compose up -d ;
      docker image prune -f
      "
  only:
    - staging

deploy:production:
  stage: production
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync
    - mkdir -p ~/.ssh
    - echo "$SERVER_SECRET_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
     - rsync -e "ssh -p22" -avrc --delete . $USER_STAGING@$HOSTS_STAGING:$PROJECT_LOCATION_PRODUCTION
    - >
      ssh -t $USER_STAGING@$HOSTS_STAGING"
      cd $PROJECT_LOCATION_PRODUCTION ;
      rm -rf .env.development ;
      cp configs/.env.production ./.env ;
      cd manifest ;
      docker-compose -f docker-compose.production.yml down ;
      docker-compose -f docker-compose.production.yml up --build -d
      "

  only:
    - production
