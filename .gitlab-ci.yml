stages:
  - staging
  - production

variables:
  PROJECT_LOCATION_STAGING: $PROJECT_LOCATION_STAGING
  PROJECT_LOCATION_PRODUCTION: $PROJECT_LOCATION_PRODUCTION
  PROJECT_DEPLOY_PORT: $PROJECT_DEPLOY_PORT
  
deploy:staging:
  stage: staging
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync
    - eval $(ssh-agent -s)
    - /bin/bash -c 'ssh-add <(echo "$SERVER_SECRET_KEY")'
  script:
    - rsync -e "ssh -p $PROJECT_DEPLOY_PORT -o StrictHostKeyChecking=no" -avrc --delete . $DEPLOY_STAGING_USER@$DEPLOY_STAGING_HOST:$PROJECT_LOCATION_STAGING
    - >
      ssh -t $DEPLOY_STAGING_USER@$DEPLOY_STAGING_HOST -p $PROJECT_DEPLOY_PORT "
      cd $PROJECT_LOCATION_STAGING ;
      cp configs/.env.staging ./.env ;
      cd manifest ;
      docker-compose -f docker-compose.staging.yml down ;
      docker-compose -f docker-compose.staging.yml up --build -d
      "
  only:
    - staging

deploy:production:
  stage: production
  image: alpine:latest
  cache: {}
  before_script:
    - apk add --no-cache openssh-client ca-certificates bash rsync
    - eval $(ssh-agent -s)
    - /bin/bash -c 'ssh-add <(echo "$SERVER_SECRET_KEY")'
  script:
    - rsync -e "ssh -p $PROJECT_DEPLOY_PORT -o StrictHostKeyChecking=no" -avrc --delete . $DEPLOY_PRODUCTION_USER@$DEPLOY_PRODUCTION_HOST:$PROJECT_LOCATION_PRODUCTION
    - >
      ssh -t $DEPLOY_PRODUCTION_USER@$DEPLOY_PRODUCTION_HOST -p $PROJECT_DEPLOY_PORT "
      cd $PROJECT_LOCATION_PRODUCTION ;
      cp configs/.env.production ./.env ;
      cd manifest ;
      docker-compose -f docker-compose.production.yml down ;
      docker-compose -f docker-compose.production.yml up --build -d
      "
  only:
    - production